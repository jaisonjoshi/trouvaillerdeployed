{"version":3,"file":"static/js/627.39e2b687.chunk.js","mappings":"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","sources":["Pages/signup/signup.jsx","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js"],"sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport loginwall from '../../Assets/loginwall.webp'\nimport google from '../../Assets/google.png'\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from '../../components/context/AuthContext';\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\nimport logo from '../../Assets/logo.png'\n\n\n\nconst Signup = () => {\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_API_URL,\n    })\n//register code\nconst [credentials, setCredentials] = useState({\n    username: undefined,\n    password: undefined,\n    phone: undefined,\n    email: undefined,\n    isVendor:true\n    \n  });\n  const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n\n  const { user, loading, error, dispatch } = useContext(AuthContext);\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n  };\n  const handleChangeEmail = (e) =>{\n\n    setEmail(e.target.value);\n    if (!emailRegex.test(e.target.value)) {\n      setEmailError('Invalid email address');\n     // setEmailerr(true);\n    } else {\n        \n      setEmailError('');\n      setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n\n    }\n  }\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n   // dispatch({ type: \"REGISTER_START\" });\n    try {\n      if(!emailError)\n      {\n      const res = await axiosInstance.post(\"/auth/register\", credentials);\n      //if(res.data.isAdmin){//check this code to control user and admin access to login\n      if(res.data){\n     // dispatch({ type: \"REGISTER_SUCCESS\", payload: res.data.details });\n      \n      navigate(\"/login\"); }\n      else{\n        //dispatch({type:\"REGISTER_FAILURE\",payload:{message:\"Registration Unsuccessful! Please try again\"}})\n        alert('Failed to create new user. Please try again')\n      }\n    }\n    else{\n     // dispatch({type:\"REGISTER_FAILURE\",payload:{message:\"Registration Unsuccessful! Please try again\"}})\n      alert('Kindly try again with a valid email id.')\n  }\n  }\n  catch (error) {\n   // dispatch({type:\"REGISTER_FAILURE\",payload:{message:\"Registration Unsuccessful! Please try again\"}})\n\n    if(error.response){\n    \n    if (error.response && error.response.status==403) {  \n        \n        alert('Sorry, the username already exists!');\n      }\n      else if (error.response && error.response.status==405) {  \n        \n        alert('Sorry, the email id alredy exists!');\n      }\n     \n      else if (error.response && error.response.status==500) {  \n        \n        alert('Unable to create a new user. Kindly fill all the mandatory fields.');\n      }\n      else{\n        alert(error.message + '. Please try again later.');\n    }\n    }\n    else if (error.request) {    \n      alert('Network error! Please try again later.')\n  } \n    else{\n        alert(error.message + '. Please try again later.');\n    }}\n      \n// } catch (err) {\n//      // dispatch({ type: \"REGISTER_FAILURE\", payload: {message:error}});\n//      dispatch({ type: \"REGISTER_FAILURE\", payload: {message:\"Registration Unsuccessful! Please try again\"}});\n//     }\n  };\n\n  const googleSignIn=async(value) => {\n        \n    // console.log(\"object inside fun\"+value);//value is taken as such\n    // console.log(JSON.stringify(value)) ;\n    \n    //reuse login code here\n    dispatch({ type: \"LOGIN_START\" });\n    try {\n      \n      const res = await axiosInstance.post(\"/auth/googlelogin\", value);\n\n      if(res.data){//check this code to control user and admin access to login\n      \n       \n        \n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data.details });\n      navigate(\"/\");\n\n                          }\n      else{\n        dispatch({type:\"LOGIN_FAILURE\",payload:{message:\"Invalid credentials\"}})\n      }\n    } catch (error) {\n      dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });\n      if(error.response){\n\n         if (error.response && error.response.status==405){\n           alert('The user with this mail id already exists. Please try again with a different account')\n           dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });}\n         else if (error.response && error.response.status==403){\n           alert('Please try again with a different account');\n           dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });}\n        else{\n          alert('Please try again with a different account!');\n          } \n      }\n      else if (error.request) {    \n        alert('Network error! Please try again later.')\n    } \n    else {\n      alert(error.message + '. Please try again later.');\n  }\n    }\n  }\n\n    //\n  \n \n\n // console.log(user);\n\n\n\n\n\n//\n    return (\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 bg-[white] h-screen w-full\">\n            <div className=\"googlelogin h-full bg-[white] flex flex-col justify-center lg:h-auto w-[95%] md:w-[70%] lg:w-[80%] 2xl:w-[60%] mx-auto \">\n            <img src={logo} className=\"w-[30%] sm:w-[25%] md:w-[25%] lg:w-[20%] mb-8 mx-auto\" alt=\"\" />\n\n                <h1 className=\"text-center mb-12 font-bold text-2xl\">Create an Account</h1>\n\n                {/* <div className='mt-16'><div className=\"flex justify-center border border-2 rounded mx-14 gap-2 py-1 items-center \"><img src={google} /><span>Sign Up with Google</span></div></div> */}\n                <GoogleLogin \n                 buttonText=\"Sign up with Google\"\n                 onSuccess={credentialResponse=>{\n        //console.log(credentialResponse.credential);\n        //console.log(credentialResponse);\n        const gid=credentialResponse.clientId\n        var token=credentialResponse.credential;\n        //verifyGoogleToken(token);\n\n        var decoded = jwt_decode(credentialResponse.credential);\n        //console.log(decoded);\n        var checkemail=decoded.email\n        var google_user={};\n        google_user.username=decoded.given_name\n        google_user.email=decoded.email\n        var number=\"add phone number\"\n        google_user.phone=number//\n        google_user.google_id=gid\n        google_user.img=decoded.picture\n        google_user.isVendor=true;\n\n        googleSignIn(google_user);\n\n        \n       // console.log(user);\n      }}\n      onError={()=>{\n        console.log(\"Login failed\");\n      }}/>\n\n                <p className=\"text-center text-blacky-light text-sm mt-4\">- OR -</p>\n\n                <div className=\"flex flex-col gap-2 \">\n                     <input type=\"text\" className=\"mx-14 rounded p-3 outline-none border border-[1px] border-[#d3d3d3] focus:ring-0 focus:ring-offset-0  hover:border-b-evergreen duration-500\" placeholder=\"Username *\" id=\"username\"required onChange={handleChange}/>\n                    <input type=\"email\" className=\"mx-14 rounded p-3 outline-none border border-[1px] border-[#d3d3d3] focus:ring-0 focus:ring-offset-0  hover:border-b-evergreen duration-500\" placeholder=\"E-mail *\" id=\"email\" required onChange={handleChangeEmail}/>\n                        { emailError && <div className=\"email-err\" style={{ color: \"red\" }}>{emailError}</div>}\n                    <input type=\"tel\" className=\"mx-14 p-3 rounded ooutline-none border border-[1px] border-[#d3d3d3] focus:ring-0 focus:ring-offset-0  hover:border-b-evergreen duration-500\" placeholder=\"Mobile Number *\" id=\"phone\" required onChange={handleChange}/>\n                    <input type=\"password\" className=\"mx-14  p-3 rounded outline-none border border-[1px] border-[#d3d3d3] focus:ring-0 focus:ring-offset-0  hover:border-b-evergreen duration-500\" placeholder=\"Create Password *\" id=\"password\"  required onChange={handleChange}/>\n                    \n                    \n                    </div>\n                <div className=\"mx-14 my-5\">\n                    <button className=\" hover:bg-evergreen duration-500 bg-blacky-dark text-whiteglow w-full rounded-md p-2 my-5\" disabled={loading} onClick={handleClick}>Create Account</button>\n                    \n                    {error && <p className=\"text-center text-[red]\">{error.message}</p>}\n                </div>\n\n                <p className=\"mx-14 text-center\">Already have an account?\n                    <Link className=\"text-[#339633] ml-1\" to=\"/Login\">Login</Link> now</p>\n            </div>\n\n            <div style={{backgroundImage:`url(${loginwall})`}} className=\"hidden lg:flex justify-center items-center h-[100vh] bg-center bg-no-repeat bg-cover\">\n                \n                </div>\n        </div>\n    )\n}\nexport default Signup\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}"],"names":["axiosInstance","axios","baseURL","process","useState","username","undefined","password","phone","email","isVendor","credentials","setCredentials","emailRegex","setEmail","emailError","setEmailError","useContext","AuthContext","loading","user","error","dispatch","navigate","useNavigate","handleChange","e","prev","target","id","value","handleClick","preventDefault","post","data","alert","response","status","message","request","googleSignIn","type","res","payload","details","className","src","logo","alt","buttonText","onSuccess","credentialResponse","gid","clientId","decoded","credential","jwt_decode","google_user","given_name","google_id","img","picture","onError","console","log","placeholder","required","onChange","test","style","color","disabled","onClick","to","backgroundImage","loginwall","InvalidCharacterError","this","prototype","Error","name","window","atob","bind","input","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","err","InvalidTokenError","token","options","pos","header","JSON","parse","base64_url_decode","split"],"sourceRoot":""}