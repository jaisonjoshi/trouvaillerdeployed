{"version":3,"file":"static/js/597.dd3c1cec.chunk.js","mappings":"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","sources":["Pages/login/Login.jsx","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './login.scss'\nimport axios from \"axios\";\nimport logo from '../../Assets/logo.png'\n\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {AuthContext} from \"../../components/context/AuthContext\";\nimport loginwall from '../../Assets/loginwall.webp';\nimport google from '../../Assets/google.png';\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\nimport { useEffect } from 'react';\n\n\n\nconst Login = ({setOpen}) => {\n  const axiosInstance = axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n})\n  //start\n\n  const [credentials, setCredentials] = useState({\n    username: undefined,\n    password: undefined,\n  });\n\n  const { user, loading, error, dispatch } = useContext(AuthContext);\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n  };\n\n  const handleClick = async (e) => {\n    setOpen(true)\n    e.preventDefault();\n    dispatch({ type: \"LOGIN_START\" });\n    try {\n      const res = await axiosInstance.post(\"/auth/login\", credentials);\n      if(res.data.isVendor){\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data.details });\n      navigate(\"/\");\n\n                          }\n      else{\n        dispatch({type:\"LOGIN_FAILURE\",payload:{message:\"Invalid credentials\"}})\n      }\n    } catch (error) {\n      dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });\n      if(error.response){\n        alert('Please try again!')\n        dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });\n      }\n      else if(error.request){\n        alert('Network error! Please try again later.')\n        dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });\n      }\n      else{\n        alert(error.message +'. Please try again')\n        dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });\n      }\n    }\n    setOpen(false)\n  };\n\n  const googleSignIn=async(value) => {\n        \n    // console.log(\"object inside fun\"+value);//value is taken as such\n    // console.log(JSON.stringify(value)) ;\n    \n    //reuse login code here\n    dispatch({ type: \"LOGIN_START\" });\n    try {\n      \n      const res = await axiosInstance.post(\"/auth/googlelogin\", value);\n\n      if(res.data){//check this code to control user and admin access to login\n      \n       \n        \n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data.details });\n      navigate(\"/\");\n\n                          }\n      else{\n        dispatch({type:\"LOGIN_FAILURE\",payload:{message:\"Invalid credentials\"}})\n      }\n    } catch (error) {\n\n      dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });\n      if (error.response) {\n       \n          if (error.response && error.response.status==405){\n          alert('The user with this mail id already exists. Please try again with a different account')\n          dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });}\n          else if (error.response && error.response.status==403){\n            alert( 'Please try again with a different account');\n\n            dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });}\n          \n        // The request was made and the server responded with a status code that falls out of the range of 2xx\n          else{\n            alert(\"Please try again with a different account!\");\n              } \n       \n      } else if (error.request) {    \n          alert('Network error! Please try again later.')\n      } \n        else {\n            alert(error.message + '. Please try again later.');\n        }\n\n\n    }\n\n    //\n  \n \n};\n\n // console.log(user);\n\n  return (\n    <div className=\"login-box h-[100vh] bg-[white]\">\n      \n\n      \n      \n      <div className=\"login-con  \">\n      <div className=\"login-box-content \">\n      <div className=\"login-head\">\n        <img src={logo} className=\"w-[50%] sm:w-[30%] md:w-[50%] lg:w-[40%] mb-8 mx-auto\" alt=\"\" />\n      <h3 className=\"font-medium\">Welcome back, Login into your account</h3>\n    </div>\n\n       \n      <div className=\" login-input mt-8\">\n          <input\n            type=\"text\"\n            className=\" rounded \"\n            placeholder=\"Username\"\n            id=\"username\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"password\"\n            className=\"rounded\"\n            placeholder=\"Password\"\n            id=\"password\"\n            onChange={handleChange}\n          />\n        </div>\n\n        <div className=\" loginbtn flex flex-col items-center justify-center\">\n        \n\n          <button\n            disabled={loading}\n            onClick={handleClick}\n            className=\" bg-[#3aac38] w-full buttongrad font-bold px-4 py-2 text-[white] rounded \"\n          >\n            Login\n          </button>\n          {error && <p className=\"text-center text-[red]\">{error.message}</p>}\n\n        </div>\n\n        <div className=\"googlelogin\">\n          <p className=\"text-center mb-4\">or</p>\n        \n          {/* //google login button */}\n       <GoogleLogin onSuccess={credentialResponse=>{\n        //console.log(credentialResponse.credential);\n       // console.log(credentialResponse);\n        const gid=credentialResponse.clientId\n        var token=credentialResponse.credential;\n        //verifyGoogleToken(token);\n\n        var decoded = jwt_decode(credentialResponse.credential);\n        //console.log(decoded);\n        var checkemail=decoded.email\n        var google_user={};\n        google_user.username=decoded.given_name\n        google_user.email=decoded.email\n        var number=\"add phone number\"\n        google_user.phone=number//\n        google_user.google_id=gid\n        google_user.img=decoded.picture\n        google_user.isVendor=true;\n\n        googleSignIn(google_user);\n\n        \n      //  console.log(user);\n      }}\n      onError={()=>{\n        console.log(\"Login failed\");\n      }}/>\n        </div>\n      <div className=\"text-center my-8\">\n        <p className=\"\">\n          New here? \n          <Link className=\"text-[#339633] ml-1\" to=\"/signup\">\n             Signup\n          </Link> to create an account\n        </p></div></div>\n      </div>\n\n      \n    </div>\n  );\n};\nexport default Login;\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}"],"names":["setOpen","axiosInstance","axios","baseURL","process","useState","username","undefined","password","credentials","setCredentials","useContext","AuthContext","loading","user","error","dispatch","navigate","useNavigate","handleChange","e","prev","target","id","value","handleClick","preventDefault","type","post","res","data","isVendor","payload","details","message","response","alert","request","googleSignIn","status","className","src","logo","alt","placeholder","onChange","disabled","onClick","onSuccess","credentialResponse","gid","clientId","decoded","credential","jwt_decode","google_user","email","given_name","phone","google_id","img","picture","onError","console","log","to","InvalidCharacterError","this","prototype","Error","name","window","atob","bind","input","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","err","InvalidTokenError","token","options","pos","header","JSON","parse","base64_url_decode","split"],"sourceRoot":""}