{"version":3,"file":"static/js/384.cfdea15a.chunk.js","mappings":"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","sources":["Pages/bidform/bidform.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport Navbar from '../components/navbar/navbar'\nimport Footer from '../components/Footer/Footer'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { solid, regular, brands, icon } from '@fortawesome/fontawesome-svg-core/import.macro'\nimport axios from 'axios'\nimport useFetch from '../../hooks/useFetch'\nimport { useNavigate } from 'react-router'\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { AuthContext } from '../components/context/AuthContext'\nconst Bidform = () => {\n    const { user, dispatch } = useContext(AuthContext);\n\n    const [anim, setAnim] = useState(\"hide\")\n    const navigate = useNavigate();\n    useEffect(()=>{\n        window.addEventListener('load', setAnim(\"show\"))\n\n    }, [])\n    \n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_API_URL,\n    })\n    const {data, loading,err} = useFetch('/locations');\n    const [locationitms, setLocationItms] = useState([{\n        locations: [\"loading\"]\n    }]);\n    useEffect(()=>{\n        if(data.length!=0){\n            setLocationItms(data)\n            //console.log(data)\n        }\n    },[data])\n    const [info, setinfo] = useState({});\n    const [open, setOpen] = useState(false);\n    const [inputValue, setInputValue] = useState(\"\");\n\n    //getting cuurent dates\n    const today = new Date();\n    const tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n  \n    const todayDate = `${today.getDate()}/${today.getMonth() + 1}/${today.getFullYear()}`;\n    const tomorrowDate = `${tomorrow.getDate()}/${tomorrow.getMonth() + 1}/${tomorrow.getFullYear()}`;\n    //console.log(\"today\"+todayDate)\n    //console.log(\"tmr\"+tomorrowDate)\n    //console.log(\"type of today date obtained\"+typeof(todayDate))\n\n   //const error=\"\";\n    //const err=\"Please fill out all the feilds!\";\n    const handlebidChange = (e) => {\n        setinfo((prev) => ({...prev, [e.target.name] : e.target.value}))\n        console.log(info)\n        //console.log(\"type of date selected\"+typeof(info.checkIn))\n    }\n    const handleClick = async e => {\n        e.preventDefault();\n       \n        try{\n            \n              \n              const newBid = {\n                ...info,destination:inputValue, username : user.username,userid:user._id,useremail:user.email,userphone:user.phone, closed:false,acceptedCount:0,checkIn:todayDate,checkOut:tomorrowDate\n              };\n             \n              \n              const res= await axiosInstance.post(\"/bids\", newBid);\n              if(res.data){\n                navigate(\"/bid-status\")\n              }\n              else{\n                res.status(404).json({ error: \"Error\" })\n              }\n               //console.log(newBid)\n           \n        } catch(err){\n            \n            if (err.response) {\n                // The request was made and the server responded with a status code that falls out of the range of 2xx\n                alert('Sorry the bid cannot be placed. Please fill out all the necessary feilds and try again.');\n               \n              } else if (err.request) {    \n                  alert('Network error! Please try again later.')\n              } \n                else {\n                    alert(err.message + ' Please try again later.');\n                }\n           \n        }\n        \n    }\n\n\n    return (\n        <div className={` animationset ${anim}`}>\n            <div className=\"\"><Navbar /></div>\n            <div className=\"w-full mt-40 px-12 md:px-20 lg:px-40\">\n                <h1 className=\"text-4xl  text-blacky-medium font-bold\">Bid a stay for your budget</h1>\n                <p className=\"text-lg my-5 text-sm md:text-[18px] text-blacky-light\">Enter your bid requirements here, and we will connect with you with the right stay provider.</p>\n            </div>\n            <form action=\"\" className=\"\" method=\"post\">\n                <div className=\"py-10 px-12 md:px-20 lg:px-40\">\n                    <div className=\"flex mid:mx-10 bordercolour text-graydust-medium rounded-lg w-72 md:w-1/2 py-2\">\n                    <FontAwesomeIcon icon={solid('location-dot')} className=\"h-7 w-7 my-auto mx-4\"/>\n                     \n                            <Autocomplete\n                                open={open}\n                                onOpen={() => {\n                                    // only open when in focus and inputValue is not empty\n                                    if (inputValue) {\n                                      setOpen(true);\n                                    }\n                                  }}\n                                  onClose={() => setOpen(false)}\n                                  inputValue={inputValue}\n                                  onInputChange={(e, value, reason) => {\n                                    setInputValue(value);\n                              \n                                    // only open when inputValue is not empty after the user typed something\n                                    if (!value) {\n                                      setOpen(false);\n                                    }\n                                  }}\n\n                            disablePortal\n                            id=\"combo-box-demo\"\n                            options={locationitms[0].locations}\n                            \n                            sx={{\n                                width:\"100%\",\n                                // border: \"1px solid blue\",\n                                \"& .MuiOutlinedInput-root\": {\n                                    border: \"none\",\n                                    borderRadius: \"0\",\n                                    padding: \"0\"\n                                },\n                                \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n                                    border: \"none\"\n                                }\n                            }}\n                            renderInput={(params) => <TextField {...params} />}\n                            />\n                    </div>\n                    <div className=\"md:flex my-7\">\n                        <div className=\"flex bordercolour text-graydust-medium rounded-lg w-72 py-2\">\n                        <FontAwesomeIcon icon={solid('list')} className=\"h-6 w-6 my-auto mx-4\" />\n                        <select name=\"categories\" id=\"categories\" onChange={handlebidChange} className=\"border border-none focus:ring-0 focus:ring-offset-0 focus:border-graydust-medium outline-none text-graydust-medium\">\n                               <option value=\"\" className=\"border border-none outline-none text-center\" disabled hidden>Select a category</option>\n                               <option value=\"vacation\" className=\"border border-none outline-none text-center\">Vacation</option>\n                               <option value=\"honeymoon\" className=\"border border-none outline-none text-center\">Honeymoon</option>\n                               <option value=\"tour\" className=\"border border-none outline-none text-center\">Tour</option>\n                               <option value=\"adventure\" className=\"border border-none outline-none text-center\">Adventure</option>\n                           </select>\n                        </div>\n                        <div className=\"md:my-auto mt-7\">\n                            <input type=\"radio\" id=\"ac\" name=\"ac\" onChange={handlebidChange} value=\"ac\" className=\"md:ml-20 outline-none\" />\n                            <label for=\"ac\" className=\"ml-5 text-graydust-normal\">AC</label>\n                            <input type=\"radio\" id=\"non_ac\" name=\"ac\" onChange={handlebidChange} value=\"nonac\" className=\"ml-20 outline-none\" />\n                            <label for=\"non_ac\" className=\"ml-5 text-graydust-normal\">Non AC</label>\n                        </div>\n                    </div>\n\n                    <div className=\"md:flex\">\n                        <div className=\"flex justify-center items-center px-3 rounded-lg my-7 md:my-5 bordercolour text-graydust-medium py-2 p-1 w-72\">\n                            <h6><div className=\"\">Check in &nbsp;</div>\n                            <input type=\"string\" id=\"checkIn\" name=\"checkIn\" value={todayDate} readOnly className=\"border border-none focus:ring-0 focus:ring-offset-0 focus:border-graydust-medium outline-none \" />\n                            </h6>\n                            </div>\n                        <div className=\"flex justify-center items-center px-3 rounded-lg my-7 md:my-5 bordercolour text-graydust-medium py-2 md:ml-10 p-1 w-72\">\n                            <h6><div className=\"\">Check out &nbsp;</div>\n                            <input type=\"string\" id=\"checkOut\" name=\"checkOut\" value={tomorrowDate} readOnly  className=\"border focus:ring-0 focus:ring-offset-0 focus:border-graydust-medium border-none outline-none\" />\n                            </h6>\n                        </div>\n                    </div> \n\n                    <div className=\"md:flex mt-5\">\n                        <div className=\"flex bordercolour text-graydust-medium rounded-lg w-fit pr-2 py-2\">\n                        <FontAwesomeIcon icon={solid('user')} className=\"h-8 w-8 my-auto mx-4\" />\n                            <input type=\"number\" name=\"accomodation\" onChange={handlebidChange} className=\"border border-none focus:ring-0 focus:ring-offset-0 focus:border-graydust-medium outline-none\" placeholder=\"3 Guests\" />\n                        </div>\n                        <div className=\"flex md:mx-10 md:my-0 my-7 bordercolour text-graydust-medium rounded-lg w-fit pr-2 \">\n                        <FontAwesomeIcon icon={solid('bed')} className=\"h-5 w-5 my-auto mx-4\" />\n                            <input type=\"number\" name=\"roomCount\" onChange={handlebidChange} className=\"border border-none focus:ring-0 focus:ring-offset-0 focus:border-graydust-medium outline-none\" placeholder=\"3 Room\" />\n                        </div>\n                    </div>\n\n                    <p className=\"my-5 text-graydust-normal pt-8\">Enter the amount you can pay for a room per night</p>\n\n                    <div className=\"md:flex\">\n                       {/*  <div className=\"my-5\">\n                            <label for=\"min_budget\" className=\"text-graydust-medium\">Min</label>\n                            <input type=\"number\" id=\"min_budget\" name=\"min_budget\" onChange={handleChange} placeholder=\"₹1000\" className=\"ml-5 p-3 outline-none border border-graydust-medium focus:ring-0 focus:ring-offset-0 focus:border-graydust-medium  text-graydust-medium w-44 py-2 rounded-xl\" />\n                        </div> */}\n                        <div className=\"sm:my-5\">\n                            <label for=\"max_budget\" className=\" text-graydust-medium\">Max</label>\n                            <input type=\"number\" id=\"maxAmount\" name=\"maxAmount\" onChange={handlebidChange} placeholder=\"₹3000\" className=\"ml-5 p-3 outline-none border border-graydust-medium focus:ring-0 focus:ring-offset-0 focus:border-graydust-medium  text-graydust-medium w-44 py-2 rounded-xl\" />\n                        </div>\n                    </div>\n\n                    <div className=\"flex justify-start my-5 py-8 pt-12\">\n                        <input type=\"reset\" value=\"Reset\" className=\"mr-10 outline-none bordercolour px-6 py-2 bg-blacky-dark text-whiteglow hover:text-blacky-dark hover:cursor-pointer text-whiteglow hover:bg-whiteglow text-center rounded-xl \" />\n                        <input type=\"submit\" value=\"Submit\" onClick={handleClick} className=\"outline-none border  px-6 py-2  text-center bg-evergreen text-whiteglow rounded-xl hover:cursor-pointer  hover:bg-evergreendark\" />\n                       \n                    </div>\n\n                </div>\n\n            </form>\n            <Footer />\n        </div>\n    )\n}\nexport default Bidform"],"names":["useContext","AuthContext","user","dispatch","useState","anim","setAnim","navigate","useNavigate","useEffect","window","addEventListener","axiosInstance","axios","baseURL","process","useFetch","data","loading","err","locations","locationitms","setLocationItms","length","info","setinfo","open","setOpen","inputValue","setInputValue","today","Date","tomorrow","setDate","getDate","todayDate","getMonth","getFullYear","tomorrowDate","handlebidChange","e","prev","target","name","value","console","log","handleClick","preventDefault","newBid","destination","username","userid","_id","useremail","email","userphone","phone","closed","acceptedCount","checkIn","checkOut","post","res","status","json","error","response","alert","request","message","className","action","method","icon","onOpen","onClose","onInputChange","reason","disablePortal","id","options","sx","width","border","borderRadius","padding","renderInput","params","onChange","disabled","hidden","type","for","readOnly","placeholder","onClick"],"sourceRoot":""}