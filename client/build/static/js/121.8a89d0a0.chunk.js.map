{"version":3,"file":"static/js/121.8a89d0a0.chunk.js","mappings":"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","sources":["Pages/signup/signup.jsx","../node_modules/@mui/icons-material/Visibility.js","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js"],"sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport loginwall from '../Assets/loginwall.webp'\nimport google from '../Assets/google.png'\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n//import {AuthContext} from '../components/context/AuthContext'\nimport {AuthContext} from \"../components/context/AuthContext\";\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst Signup = () => {\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_API_URL,\n    })\n//register code\nconst [credentials, setCredentials] = useState({\n    username: undefined,\n    password: undefined,\n    phone: undefined,\n    email: undefined\n    \n  });\n  function showPassword() {\n    var x = document.getElementById(\"password\");\n    if (x.type === \"password\") {\n      x.type = \"text\";\n    } else {\n      x.type = \"password\";\n    }\n  }\n  const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n\n  const { user, loading, error, dispatch } = useContext(AuthContext);\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n  };\n\n  const handleChangeEmail = (e) =>{\n\n    setEmail(e.target.value);\n    if (!emailRegex.test(e.target.value)) {\n      setEmailError('Invalid email address');\n     // setEmailerr(true);\n    } else {\n        \n      setEmailError('');\n      setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n\n    }\n  }\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    //dispatch({ type: \"REGISTER_START\" });\n    try {\n      if(!emailError)\n      {\n      const res = await axiosInstance.post(\"/auth/register\", credentials);\n      //if(res.data.isAdmin){//check this code to control user and admin access to login\n      if(res.data){\n      //dispatch({ type: \"REGISTER_SUCCESS\", payload: res.data.details });\n      \n      navigate(\"/login\"); }\n      else{\n        alert('Failed to create new user. Please try again')\n        //dispatch({type:\"REGISTER_FAILURE\",payload:{message:\"Invalid input for Registration!\"}})\n      }\n    }\n  \n  else{     \n   // dispatch({type:\"REGISTER_FAILURE\",payload:{message:\"Registration Unsuccessful! Please try again\"}})\n    alert('Kindly try again with a valid email id.')\n    }} catch (error) {\n      if(error.response){\n    \n        if (error.response && error.response.status==403) {  \n            \n            alert('Sorry, the username already exists!');\n          }\n          else if (error.response && error.response.status==405) {  \n            \n            alert('Sorry, the email id alredy exists!');\n          }\n         \n          else if (error.response && error.response.status==500) {  \n            \n            alert('Unable to create a new user. Kindly fill all the mandatory fields.');\n          }\n          else{\n            alert(error.message + '. Please try again later.');\n        }\n        }\n        else if (error.request) {    \n          alert('Network error! Please try again later.')\n        } \n        else{\n            alert(error.message + '. Please try again later.');}\n      //dispatch({ type: \"REGISTER_FAILURE\", payload: {message:\"Registration Unsuccessful! Please try again\"}});\n    }\n  };\n  const googleSignIn=async(value) => {\n        \n    // console.log(\"object inside fun\"+value);//value is taken as such\n    // console.log(JSON.stringify(value)) ;\n    \n    //reuse login code here\n    dispatch({ type: \"LOGIN_START\" });\n    try {\n      \n      const res = await axiosInstance.post(\"/auth/googlelogin\", value);\n\n      if(res.data){//check this code to control user and admin access to login\n      \n       \n        \n      dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data.details });\n      navigate(\"/\");\n\n                          }\n      else{\n        dispatch({type:\"LOGIN_FAILURE\",payload:{message:\"Invalid credentials\"}})\n      }\n    } catch (error) {\n      dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });\n      if(error.response){\n         if (error.response && error.response.status==405){\n      alert('The user with this mail id already exists. Please try again with a different account')\n      dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });}\n         else if (error.response && error.response.status==403){\n        alert('Please try again with a different account');\n        dispatch({ type: \"LOGIN_FAILURE\", payload: {message:\" \"} });}\n        else{\n          alert('Please try again with a different account!');\n          } \n      }\n      else if (error.request) {    \n        alert('Network error! Please try again later.')\n    } \n    else {\n      alert(error.message + '. Please try again later.');\n  }\n    }\n  }\n\n  //console.log(user);\n\n\n\n\n\n//\n    return (\n<div>\n<div className=\"hidden md:grid grid-cols-1 lg:grid-cols-2 h-screen w-full\">\n            <div className=\"h-[100vh] lg:h-auto w-[100%] md:w-[70%] lg:w-[80%] 2xl:w-[60%] mx-auto pt-40\">\n\n                <h1 className=\"text-center m-4 font-bold text-2xl\">Create an Account</h1>\n\n                {/* <div className='mt-16'><div className=\"flex justify-center border border-2 rounded mx-14 gap-2 py-1 items-center \"><img src={google} /><span>Sign Up with Google</span></div></div> */}\n                <div className='mx-14 glogin'>\n                <GoogleLogin \n                 buttonText=\"Sign up with Google\"\n                 onSuccess={credentialResponse=>{\n        //console.log(credentialResponse.credential);\n        //console.log(credentialResponse);\n        const gid=credentialResponse.clientId\n        var token=credentialResponse.credential;\n        //verifyGoogleToken(token);\n\n        var decoded = jwt_decode(credentialResponse.credential);\n        //console.log(decoded);\n        var checkemail=decoded.email\n        var google_user={};\n        google_user.username=decoded.given_name\n        google_user.email=decoded.email\n        var number=\"add phone number\"\n        google_user.phone=number//\n        google_user.google_id=gid\n        google_user.img=decoded.picture\n        \n\n        googleSignIn(google_user);\n\n        \n       // console.log(user);\n      }}\n      onError={()=>{\n        console.log(\"Login failed\");\n      }}/>\n                </div>\n\n                <p className=\"text-center text-blacky-light text-sm mt-8\">- OR -</p>\n\n                <div className=\"flex flex-col\">\n                     <input type=\"text\" className=\"mx-8 md:mx-14 p-3 outline-none border-none rounded mb-4 bg-[#eeeeee] focus:ring-[transparent]  focus:border-[transparent]\" placeholder=\"Username\" id=\"username\"required onChange={handleChange}/>\n                    <input type=\"email\" className=\"mx-8 md:mx-14 p-3 outline-none border-none rounded mb-4 bg-[#eeeeee] focus:ring-[transparent]  focus:border-[transparent]\" placeholder=\"E-mail\" id=\"email\" required onChange={handleChangeEmail}/>\n                    { emailError && <div className=\"email-err\" style={{ color: \"red\" }}>{emailError}</div>}\n                    <input type=\"tel\" className=\"mx-8 md:mx-14 p-3 outline-none border-none rounded mb-4 bg-[#eeeeee] focus:ring-[transparent]  focus:border-[transparent]\" placeholder=\"Mobile Number\" id=\"phone\" required onChange={handleChange}/>\n<div className='bg-[#eeeeee] mx-8 md:mx-14 rounded'>\n<input type=\"password\" className=\" w-[90%] outline-none border-none focus:ring-[transparent]  focus:border-[transparent] bg-transparent\" placeholder=\"Create Password\" id=\"password\" required onChange={handleChange}/>\n<VisibilityIcon onClick={showPassword} className=\"text-[grey]\"/>\n\n</div>                    \n                    \n                    </div>\n                <div className=\"mx-14 my-5\">\n                    <button className=\" bg-evergreen duration-500 font-bold text-whiteglow w-full rounded-md p-2 my-5\" disabled={loading} onClick={handleClick}>Create Account</button>\n                    {error && <span>{error.message}</span>}\n                </div>\n\n                <p className=\"mx-14\">Already have an account?\n                    <Link className=\"text-[#339633]\" to=\"/Login\">    Login</Link></p>\n            </div>\n\n            <div style={{backgroundImage:`url(https://res.cloudinary.com/difxlqrlc/image/upload/q_auto/f_auto/w_1000/v1684527559/site/loginwall_pfjmtp.webp)`}} className=\"hidden lg:flex justify-center items-center h-[100vh] bg-center bg-no-repeat bg-cover\">\n                \n                </div>\n        </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        <div className=\"md:hidden loginbg h-[60vh] w-full\">\n            <div className=\" bg-white absolute top-0 left-0 bottom-0 w-full  mx-auto\">\n\n                <h1 className=\"text-left mx-8 mb-8 mt-8 font-medium text-xl\">Create an Account</h1>\n\n                {/* <div className='mt-16'><div className=\"flex justify-center border border-2 rounded mx-14 gap-2 py-1 items-center \"><img src={google} /><span>Sign Up with Google</span></div></div> */}\n                \n\n                <div className=\"flex flex-col\">\n                  <label htmlFor=\"\" className='text-sm mx-8 text-[grey]'>User Name</label>\n                     <input type=\"text\" className=\"mx-8 md:mx-14 px-3 py-2 outline-none border-none rounded mb-4 bg-[#eeeeee] focus:ring-[transparent]  focus:border-[transparent]\" placeholder=\"\" id=\"username\"required onChange={handleChange}/>\n                    <label htmlFor=\"\"  className='text-sm mx-8 text-[grey]'>E-mail</label>\n                    <input type=\"email\" className=\"mx-8 md:mx-14 px-3 py-2 outline-none border-none rounded mb-4 bg-[#eeeeee] focus:ring-[transparent]  focus:border-[transparent]\" placeholder=\"\" id=\"email\" required onChange={handleChangeEmail}/>\n                    { emailError && <div className=\"email-err\" style={{ color: \"red\" }}>{emailError}</div>}\n                   <label  className='text-sm mx-8 text-[grey]'>Mobile Number</label>\n                    <input type=\"tel\" className=\"mx-8 md:mx-14 px-3 py-2 outline-none border-none rounded mb-4 bg-[#eeeeee] focus:ring-[transparent]  focus:border-[transparent]\" placeholder=\"\" id=\"phone\" required onChange={handleChange}/>\n                    <label htmlFor=\"\"  className='text-sm mx-8 text-[grey]'>Create Password</label>\n\n<div className='bg-[#eeeeee] mx-8 md:mx-14 rounded'>\n<input type=\"password\" className=\" w-[90%] outline-none border-none focus:ring-[transparent]  focus:border-[transparent] bg-transparent\" placeholder=\"\" id=\"password\" required onChange={handleChange}/>\n<VisibilityIcon onClick={showPassword} className=\"text-[grey]\"/>\n\n</div>                    \n                    \n                    </div>\n                <div className=\"mx-8 \">\n                    <button className=\" bg-evergreen duration-500 font-bold text-whiteglow w-full rounded-full p-2 my-5\" disabled={loading} onClick={handleClick}>Create Account</button>\n                    {error && <span>{error.message}</span>}\n                </div>\n\n                <p className=\"mx-14 text-center\">\n                    <Link className=\"text-[grey] text-base\" to=\"/Login\">    Already have an account?</Link></p>\n                    <p className=\"text-center text-blacky-light text-sm mt-4\">- OR -</p>\n\n                    <div className='mx-14 mb-8 glogin'>\n                <GoogleLogin \n                 buttonText=\"Sign up with Google\"\n                 onSuccess={credentialResponse=>{\n        //console.log(credentialResponse.credential);\n        //console.log(credentialResponse);\n        const gid=credentialResponse.clientId\n        var token=credentialResponse.credential;\n        //verifyGoogleToken(token);\n\n        var decoded = jwt_decode(credentialResponse.credential);\n        //console.log(decoded);\n        var checkemail=decoded.email\n        var google_user={};\n        google_user.username=decoded.given_name\n        google_user.email=decoded.email\n        var number=\"add phone number\"\n        google_user.phone=number//\n        google_user.google_id=gid\n        google_user.img=decoded.picture\n        \n\n        googleSignIn(google_user);\n\n        \n       // console.log(user);\n      }}\n      onError={()=>{\n        console.log(\"Login failed\");\n      }}/>\n                </div>\n\n            </div>\n\n           \n        </div>\n</div>\n        \n    )\n}\nexport default Signup\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}"],"names":["axiosInstance","axios","baseURL","process","useState","username","undefined","password","phone","email","credentials","setCredentials","showPassword","x","document","getElementById","type","emailRegex","setEmail","emailError","setEmailError","useContext","AuthContext","loading","user","error","dispatch","navigate","useNavigate","handleChange","e","prev","target","id","value","handleChangeEmail","test","handleClick","preventDefault","post","data","alert","response","status","message","request","googleSignIn","res","payload","details","className","buttonText","onSuccess","credentialResponse","gid","clientId","decoded","credential","jwt_decode","google_user","given_name","google_id","img","picture","onError","console","log","placeholder","required","onChange","style","color","Visibility","onClick","disabled","to","backgroundImage","htmlFor","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","InvalidCharacterError","this","prototype","Error","name","window","atob","bind","input","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","err","InvalidTokenError","token","options","pos","header","JSON","parse","base64_url_decode","split"],"sourceRoot":""}