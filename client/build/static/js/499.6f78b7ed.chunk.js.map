{"version":3,"file":"static/js/499.6f78b7ed.chunk.js","mappings":"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","sources":["Pages/signup/signup.jsx","../node_modules/jwt-decode/lib/atob.js","../node_modules/jwt-decode/lib/base64_url_decode.js","../node_modules/jwt-decode/lib/index.js"],"sourcesContent":["import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport google from '../Assets/google.png'\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n//import {AuthContext} from '../components/context/AuthContext'\nimport { AuthContext } from \"../components/context/AuthContext\";\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport logo from \"../Assets/Trouvailler Green.png\";\n\nconst Signup = () => {\n  const axiosInstance = axios.create({\n    baseURL: process.env.REACT_APP_API_URL,\n  })\n  //register code\n  const [credentials, setCredentials] = useState({\n    username: undefined,\n    password: undefined,\n    phone: undefined,\n    email: undefined\n\n  });\n  function showPassword() {\n    var x = document.getElementById(\"password\");\n    if (x.type === \"password\") {\n      x.type = \"text\";\n    } else {\n      x.type = \"password\";\n    }\n  }\n  const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n\n  const { user, loading, error, dispatch } = useContext(AuthContext);\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n  };\n\n  const handleChangeEmail = (e) => {\n\n    setEmail(e.target.value);\n    if (!emailRegex.test(e.target.value)) {\n      setEmailError('Invalid email address');\n      // setEmailerr(true);\n    } else {\n\n      setEmailError('');\n      setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\n\n    }\n  }\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    //dispatch({ type: \"REGISTER_START\" });\n    try {\n      if (!emailError) {\n        const res = await axiosInstance.post(\"/auth/register\", credentials);\n        //if(res.data.isAdmin){//check this code to control user and admin access to login\n        if (res.data) {\n          //dispatch({ type: \"REGISTER_SUCCESS\", payload: res.data.details });\n\n          navigate(\"/login\");\n        }\n        else {\n          alert('Failed to create new user. Please try again')\n          //dispatch({type:\"REGISTER_FAILURE\",payload:{message:\"Invalid input for Registration!\"}})\n        }\n      }\n\n      else {\n        // dispatch({type:\"REGISTER_FAILURE\",payload:{message:\"Registration Unsuccessful! Please try again\"}})\n        alert('Kindly try again with a valid email id.')\n      }\n    } catch (error) {\n      if (error.response) {\n\n        if (error.response && error.response.status == 403) {\n\n          alert('Sorry, the username already exists!');\n        }\n        else if (error.response && error.response.status == 405) {\n\n          alert('Sorry, the email id alredy exists!');\n        }\n\n        else if (error.response && error.response.status == 500) {\n\n          alert('Unable to create a new user. Kindly fill all the mandatory fields.');\n        }\n        else {\n          alert(error.message + '. Please try again later.');\n        }\n      }\n      else if (error.request) {\n        alert('Network error! Please try again later.')\n      }\n      else {\n        alert(error.message + '. Please try again later.');\n      }\n      //dispatch({ type: \"REGISTER_FAILURE\", payload: {message:\"Registration Unsuccessful! Please try again\"}});\n    }\n  };\n  const googleSignIn = async (value) => {\n\n    // console.log(\"object inside fun\"+value);//value is taken as such\n    // console.log(JSON.stringify(value)) ;\n\n    //reuse login code here\n    dispatch({ type: \"LOGIN_START\" });\n    try {\n\n      const res = await axiosInstance.post(\"/auth/googlelogin\", value);\n\n      if (res.data) {//check this code to control user and admin access to login\n\n\n\n        dispatch({ type: \"LOGIN_SUCCESS\", payload: res.data.details });\n        navigate(\"/\");\n\n      }\n      else {\n        dispatch({ type: \"LOGIN_FAILURE\", payload: { message: \"Invalid credentials\" } })\n      }\n    } catch (error) {\n      dispatch({ type: \"LOGIN_FAILURE\", payload: { message: \" \" } });\n      if (error.response) {\n        if (error.response && error.response.status == 405) {\n          alert('The user with this mail id already exists. Please try again with a different account')\n          dispatch({ type: \"LOGIN_FAILURE\", payload: { message: \" \" } });\n        }\n        else if (error.response && error.response.status == 403) {\n          alert('Please try again with a different account');\n          dispatch({ type: \"LOGIN_FAILURE\", payload: { message: \" \" } });\n        }\n        else {\n          alert('Please try again with a different account!');\n        }\n      }\n      else if (error.request) {\n        alert('Network error! Please try again later.')\n      }\n      else {\n        alert(error.message + '. Please try again later.');\n      }\n    }\n  }\n\n  //console.log(user);\n\n\n\n\n\n  //\n  return (\n    <div>\n      <div className=\" h-screen relative w-full bg-login\">\n      <div className=\"absolute top-0 left-0 right-0 bottom-0 bg-[#0000009e]\">\n\n</div>\n        <div className=\" bg-[white] py-4 sm:py-12 min-w-[330px] sm:min-w-[500px] lg:min-w-[600px] absolute z-[110] top-[50%] left-[50%] translate-x-[-50%] rounded-[10px] translate-y-[-50%] shadow-lg mx-auto \">\n          <img src={logo} className=\"w-[80px] sm:w-[100px] mx-auto lg:w-[120px]\" alt=\"\" />\n\n          <h1 className=\"text-center m-4 font-bold text-lg sm:text-2xl\">Create an Account</h1>\n\n          {/* <div className='mt-16'><div className=\"flex justify-center border border-2 rounded mx-14 gap-2 py-1 items-center \"><img src={google} /><span>Sign Up with Google</span></div></div> */}\n          <div className='sm:mx-14 glogin mt-4 sm:mt-12'>\n            <GoogleLogin\n              buttonText=\"Sign up with Google\"\n              onSuccess={credentialResponse => {\n                //console.log(credentialResponse.credential);\n                //console.log(credentialResponse);\n                const gid = credentialResponse.clientId\n                var token = credentialResponse.credential;\n                //verifyGoogleToken(token);\n\n                var decoded = jwt_decode(credentialResponse.credential);\n                //console.log(decoded);\n                var checkemail = decoded.email\n                var google_user = {};\n                google_user.username = decoded.given_name\n                google_user.email = decoded.email\n                var number = \"add phone number\"\n                google_user.phone = number//\n                google_user.google_id = gid\n                google_user.img = decoded.picture\n\n\n                googleSignIn(google_user);\n\n\n                // console.log(user);\n              }}\n              onError={() => {\n                console.log(\"Login failed\");\n              }} />\n          </div>\n\n          <p className=\"text-center text-blacky-light text-xs sm:text-sm my-4 sm:my-8\">- OR -</p>\n\n          <div className=\"flex flex-col\">\n\n\n            <div className=\"bg-[white] border border-[1px] border-[#00b07f] relative rounded mb-4 sm:mb-8 w-[90%] sm:w-[70%] mx-auto\">\n              <span className=\"absolute bg-[white] top-0 left-4 translate-y-[-50%] text-xs sm:text-sm  lg:text-base px-2 text-[grey]\">UserName</span>\n              <input\n                type=\"text\"\n                className=\"  sm:p-3 outline-none text-sm sm:text-base rounded  border-transparent bg-transparent w-[100%] focus:ring-[transparent]  focus:border-[transparent] \"\n                id=\"username\" required                onChange={handleChange}\n              />\n            </div>\n\n\n            <div className=\"bg-[white] border border-[1px] border-[#00b07f] relative rounded mb-4 sm:mb-8 w-[90%] sm:w-[70%] mx-auto\">\n              <span className=\"absolute bg-[white] top-0 left-4 translate-y-[-50%]  text-xs sm:text-sm  lg:text-base px-2 text-[grey]\">Email</span>\n              <input\n                type=\"text\"\n                className=\"  sm:p-3 outline-none text-sm sm:text-base rounded  border-transparent bg-transparent w-[100%] focus:ring-[transparent]  focus:border-[transparent] \"\n                id=\"email\" required                onChange={handleChange}\n              />\n            </div>\n            {emailError && <div className=\"email-err\" style={{ color: \"red\" }}>{emailError}</div>}\n\n\n            <div className=\"bg-[white] border border-[1px] border-[#00b07f] relative rounded mb-4 sm:mb-8 w-[90%] sm:w-[70%] mx-auto\">\n              <span className=\"absolute bg-[white] top-0 left-4 translate-y-[-50%] text-xs sm:text-sm  lg:text-base px-2 text-[grey]\">Mobile Number</span>\n              <input\n                type=\"tel\"\n                className=\"  sm:p-3 outline-none text-sm sm:text-base rounded  border-transparent bg-transparent w-[100%] focus:ring-[transparent]  focus:border-[transparent] \"\n                id=\"phone\" required                onChange={handleChange}\n              />\n            </div>\n\n            <div className=\"bg-[white] relative border border-[1px] border-[#00b07f] rounded w-[90%] sm:w-[70%] mx-auto\">\n            <span className=\"absolute bg-[white] top-0 left-4 translate-y-[-50%] px-2 text-[grey] text-xs sm:text-sm  lg:text-base\">Password</span>\n\n              <input\n                type=\"password\"\n                className=\" sm:p-3 outline-none rounded text-sm sm:text-base  border-transparent bg-transparent w-[90%] focus:ring-[transparent]  focus:border-[transparent] \"\n                id=\"password\"\n                onChange={handleChange}\n              ></input>\n              <VisibilityIcon onClick={showPassword} className=\"w-[15px] text-[grey] cursor-pointer\" />\n            </div>\n\n\n           \n\n          </div>\n          <div className=\"w-[90%] sm:w-[70%] mx-auto sm:my-5\">\n            <button className=\" bg-evergreen duration-500 font-bold text-sm sm:text-base text-whiteglow w-full rounded-md p-2 my-5\" disabled={loading} onClick={handleClick}>Create Account</button>\n            {error && <span>{error.message}</span>}\n          </div>\n\n          <p className=\"text-center text-sm sm:text-base\">Already have an account?\n            <Link className=\"text-[#339633]\" to=\"/Login\">    Login</Link></p>\n        </div>\n\n\n      </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    </div>\n\n  )\n}\nexport default Signup\n","/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}"],"names":["axiosInstance","axios","create","baseURL","process","_useState","useState","username","undefined","password","phone","email","_useState2","_slicedToArray","credentials","setCredentials","_useState3","_useState4","_useState5","_useState6","emailError","_useContext","useContext","AuthContext","loading","user","error","dispatch","navigate","useNavigate","handleChange","e","prev","_objectSpread","_defineProperty","target","id","value","handleClick","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","next","preventDefault","post","sent","data","alert","t0","response","status","message","request","stop","_x","apply","arguments","googleSignIn","_ref2","_callee2","res","_context2","type","payload","details","_x2","_jsx","children","_jsxs","className","src","logo","alt","GoogleLogin","buttonText","onSuccess","credentialResponse","gid","clientId","decoded","credential","jwt_decode","google_user","given_name","google_id","img","picture","onError","console","log","required","onChange","style","color","VisibilityIcon","onClick","x","document","getElementById","disabled","Link","to","this","prototype","Error","name","r","window","atob","bind","t","String","replace","length","n","o","a","i","c","charAt","fromCharCode","indexOf","decodeURIComponent","charCodeAt","toString","toUpperCase","header","JSON","parse","split"],"sourceRoot":""}