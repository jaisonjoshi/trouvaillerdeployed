{"version":3,"file":"static/js/517.86a2e977.chunk.js","mappings":"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","sources":["Pages/components/crop/utils/cropImage.js","Pages/components/crop/CropEasy.js","Pages/userProfile/Updateprofile.js"],"sourcesContent":["export const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener('load', () => resolve(image));\n    image.addEventListener('error', (error) => reject(error));\n    image.setAttribute('crossOrigin', 'anonymous'); // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url;\n  });\n\nexport function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width, height, rotation) {\n  const rotRad = getRadianAngle(rotation);\n\n  return {\n    width:\n      Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height:\n      Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\n  };\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n */\nexport default async function getCroppedImg(\n  imageSrc,\n  pixelCrop,\n  rotation = 0,\n  flip = { horizontal: false, vertical: false }\n) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  if (!ctx) {\n    return null;\n  }\n\n  const rotRad = getRadianAngle(rotation);\n\n  // calculate bounding box of the rotated image\n  const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\n    image.width,\n    image.height,\n    rotation\n  );\n\n  // set canvas size to match the bounding box\n  canvas.width = bBoxWidth;\n  canvas.height = bBoxHeight;\n\n  // translate canvas context to a central location to allow rotating and flipping around the center\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2);\n  ctx.rotate(rotRad);\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1);\n  ctx.translate(-image.width / 2, -image.height / 2);\n\n  // draw rotated image\n  ctx.drawImage(image, 0, 0);\n\n  // croppedAreaPixels values are bounding box relative\n  // extract the cropped image using these values\n  const data = ctx.getImageData(\n    pixelCrop.x,\n    pixelCrop.y,\n    pixelCrop.width,\n    pixelCrop.height\n  );\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  // paste generated rotate image at the top left corner\n  ctx.putImageData(data, 0, 0);\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      file.name = 'cropped.jpeg';\n      resolve({ file: file, url: URL.createObjectURL(file) });\n    }, 'image/jpeg');\n  });\n}","import { Cancel } from '@mui/icons-material';\nimport CropIcon from '@mui/icons-material/Crop';\nimport {\n  Box,\n  Button,\n  DialogActions,\n  DialogContent,\n  Slider,\n  Typography,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport Cropper from 'react-easy-crop';\nimport getCroppedImg from './utils/cropImage';\n\nconst CropEasy = ({ photoURL, setOpenCrop, setPhotoURL, setFile, imgFiles, setImgFiles, size }) => {\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [rotation, setRotation] = useState(0);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n\n  const cropComplete = (croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  };\n\n  const cropImage = async () => {\n    try {\n      const { file, url } = await getCroppedImg(\n        photoURL,\n        croppedAreaPixels,\n        rotation\n      );\n      setPhotoURL(url);\n      setFile(file);\n      setImgFiles([...imgFiles,file ])\n\n      setOpenCrop(false);\n    } catch (error) {\n     \n      console.log(error);\n    }\n\n          };\n  return (\n    <>\n      <DialogContent\n        dividers\n        sx={{\n          background: '#333',\n          position: 'relative',\n          height: 400,\n          width: 'auto',\n          minWidth: { sm: 500 },\n        }}\n      >\n        <Cropper\n          image={photoURL}\n          crop={crop}\n          zoom={zoom}\n          rotation={rotation}\n          aspect={size}\n          onZoomChange={setZoom}\n          onRotationChange={setRotation}\n          onCropChange={setCrop}\n          onCropComplete={cropComplete}\n        />\n      </DialogContent>\n      <DialogActions sx={{ flexDirection: 'column', mx: 3, my: 2 }}>\n        <Box sx={{ width: '100%', mb: 1 }}>\n          <Box>\n            <Typography>Zoom: {zoomPercent(zoom)}</Typography>\n            <Slider\n              valueLabelDisplay=\"auto\"\n              valueLabelFormat={zoomPercent}\n              min={1}\n              max={3}\n              step={0.1}\n              value={zoom}\n              onChange={(e, zoom) => setZoom(zoom)}\n            />\n          </Box>\n          <Box>\n            <Typography>Rotation: {rotation + '°'}</Typography>\n            <Slider\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={360}\n              value={rotation}\n              onChange={(e, rotation) => setRotation(rotation)}\n            />\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            gap: 2,\n            flexWrap: 'wrap',\n          }}\n        >\n          <Button\n            variant=\"outlined\"\n            startIcon={<Cancel />}\n            onClick={() => setOpenCrop(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<CropIcon />}\n            onClick={cropImage}\n          >\n            Crop\n          </Button>\n        </Box>\n      </DialogActions>\n    </>\n  );\n};\n\nexport default CropEasy;\n\nconst zoomPercent = (value) => {\n  return `${Math.round(value * 100)}%`;\n};","import React from 'react';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport Footer from \"../components/Footer/Footer\"\nimport Navbar from '../components/navbar/navbar'\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport { useLocation } from 'react-router-dom';\nimport useFetch from '../../hooks/useFetch';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {useNavigate} from 'react-router-dom'\n\nimport axios from \"axios\"\nimport DriveFolderUploadIcon from '@mui/icons-material/DriveFolderUpload';\n\nimport avatar from '../Assets/avatar.png'\nimport { Link } from 'react-router-dom';\nimport './userprofile.css'\nimport CropEasy from '../../Pages/components/crop/CropEasy'\nconst Updateuser = ({setOpen}) => {\n    \n    // const userObj = JSON.parse(window.localStorage.getItem('user'))\n    const userObj = JSON.parse(window.sessionStorage.getItem('user'))\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_API_URL,\n    })\n    const navigate = useNavigate();\n\n    const {data, loading, error} = useFetch(`/user/find/${userObj._id}`)\n    console.log(data)\n    const [info, setinfo] = useState({});\n\n    const size = 1;\n\n    const handleChange = (e) => {\n        setinfo((prev) => ({...prev, [e.target.id] : e.target.value}))\n        console.log(info)\n    }\n    const [file, setFile] = useState(\"\")\n\n    const [photoURL, setPhotoURL] = useState(\"\");\n    const [openCrop, setOpenCrop] = useState(false);\n    const [imgFiles, setImgFiles] = useState([])\n    const handleImageChange = (e) => {\n        const file = e.target.files[0];\n        if(file){\n            setFile(file);\n            setPhotoURL(URL.createObjectURL(file)); \n            setOpenCrop(true);\n            console.log(imgFiles)\n        }\n       }\n    \n       const handleReviewClick = async e => {\n\n        e.preventDefault();\n        setOpen(true)\n\n        try{\n            let url = data.img\n            if(file != \"\"){\n                const data = new FormData();\n                data.append(\"file\", file);\n                data.append(\"upload_preset\", \"upload\");\n                const uploadRes = await axiosInstance.post(\n                    \"https://api.cloudinary.com/v1_1/difxlqrlc/image/upload\",\n                data\n              );\n\n              url  = uploadRes.data.url;\n            }\n            // localStorage.setItem('user.img', url)\n            sessionStorage.setItem('user.img', url)\n                \n            const newUser = {\n                ...info,img:url,\n            };\n            console.log(newUser, \"HAI\")\n            await axiosInstance.patch(`/user/${userObj._id}`, newUser);\n            console.log(\"new review has been created\")\n\n             navigate('/user')\n        }catch(err){\n            console.log(err)\n        }\n        setOpen(false)\n\n        \n    }\n\n\n\n\n    return (\n\n\n        \n        <div>\n            <Navbar  />\n            {/* Header */}\n            {openCrop &&\n            <div className='crop-box-con'><CropEasy {...{ photoURL, setOpenCrop, setPhotoURL, setFile ,imgFiles,setImgFiles, size}} /></div>}\n            \n            <div className=\"mt-20 md:mt-32 flex items-center justify-center px-8 py-8\">\n                <div className=\"flex flex-col justify-center items-start  gap-[30px] user-con\">\n                    <div className=\"w-[50%] flex justify-start \">\n                    <img className='w-[60%] md:w-[70%] max-w-[500px] rounded-full' src={\n                                        file\n                                        ? URL.createObjectURL(file)\n                                        : data.img\n                                    } alt=\"\" />                            \n                    </div>\n                    <label htmlFor=\"profilephoto\">Upload image  <DriveFolderUploadIcon className='upload-icn'/></label>\n                    <input type=\"file\" id='profilephoto' className='hidden' onChange={handleImageChange}/>\n                    <div className=\"w-[100%] md:w-[50%] flex flex-col gap-[10px] items-start\">\n                       <form action=\"\" className='flex flex-col gap-[10px] items-start text-[grey]'>\n                            <input className='border-none rounded outline-none' type=\"text\" defaultValue={data.username} id=\"username\" onChange={handleChange} />\n                           {data.google_id?<div></div>: <input type=\"text\" className='border-none rounded outline-none' defaultValue={data.email} id=\"email\" onChange={handleChange}/>}\n                            <input type=\"text\" className='border-none rounded outline-none' defaultValue={data.phone} id=\"phone\" onChange={handleChange}/>\n                            <button  className=\"flex justify-center items-center bg-evergreen text-blacky-medium w-36 font-bold rounded-md p-2 my-5 hover:bg-whiteglow duration-500\" onClick={handleReviewClick}>Update</button>\n                       </form>\n                    </div>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n};\n\n\n\n\nexport default Updateuser;"],"names":["createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","src","getRadianAngle","degreeValue","Math","PI","rotateSize","width","height","rotation","rotRad","abs","cos","sin","getCroppedImg","imageSrc","pixelCrop","flip","horizontal","vertical","canvas","document","createElement","ctx","getContext","bBoxWidth","bBoxHeight","translate","rotate","scale","drawImage","data","getImageData","x","y","putImageData","toBlob","file","name","URL","createObjectURL","photoURL","setOpenCrop","setPhotoURL","setFile","imgFiles","setImgFiles","size","useState","crop","setCrop","zoom","setZoom","setRotation","croppedAreaPixels","setCroppedAreaPixels","cropImage","console","log","DialogContent","dividers","sx","background","position","minWidth","sm","aspect","onZoomChange","onRotationChange","onCropChange","onCropComplete","croppedArea","DialogActions","flexDirection","mx","my","Box","mb","Typography","zoomPercent","Slider","valueLabelDisplay","valueLabelFormat","min","max","step","value","onChange","e","display","gap","flexWrap","Button","variant","startIcon","Cancel","onClick","Crop","round","setOpen","userObj","JSON","parse","window","sessionStorage","getItem","axiosInstance","axios","baseURL","process","navigate","useNavigate","useFetch","_id","loading","info","setinfo","handleChange","prev","target","id","openCrop","handleReviewClick","preventDefault","img","FormData","append","post","uploadRes","setItem","newUser","patch","className","alt","htmlFor","DriveFolderUpload","type","files","action","defaultValue","username","google_id","email","phone","Footer"],"sourceRoot":""}