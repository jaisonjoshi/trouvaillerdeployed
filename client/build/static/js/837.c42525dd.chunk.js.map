{"version":3,"file":"static/js/837.c42525dd.chunk.js","mappings":"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","sources":["Pages/components/crop/utils/cropImage.js","Pages/components/crop/CropEasy.js","Pages/userProfile/Updateprofile.js"],"sourcesContent":["export const createImage = (url) =>\n  new Promise((resolve, reject) => {\n    const image = new Image();\n    image.addEventListener('load', () => resolve(image));\n    image.addEventListener('error', (error) => reject(error));\n    image.setAttribute('crossOrigin', 'anonymous'); // needed to avoid cross-origin issues on CodeSandbox\n    image.src = url;\n  });\n\nexport function getRadianAngle(degreeValue) {\n  return (degreeValue * Math.PI) / 180;\n}\n\n/**\n * Returns the new bounding area of a rotated rectangle.\n */\nexport function rotateSize(width, height, rotation) {\n  const rotRad = getRadianAngle(rotation);\n\n  return {\n    width:\n      Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\n    height:\n      Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\n  };\n}\n\n/**\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\n */\nexport default async function getCroppedImg(\n  imageSrc,\n  pixelCrop,\n  rotation = 0,\n  flip = { horizontal: false, vertical: false }\n) {\n  const image = await createImage(imageSrc);\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  if (!ctx) {\n    return null;\n  }\n\n  const rotRad = getRadianAngle(rotation);\n\n  // calculate bounding box of the rotated image\n  const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\n    image.width,\n    image.height,\n    rotation\n  );\n\n  // set canvas size to match the bounding box\n  canvas.width = bBoxWidth;\n  canvas.height = bBoxHeight;\n\n  // translate canvas context to a central location to allow rotating and flipping around the center\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2);\n  ctx.rotate(rotRad);\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1);\n  ctx.translate(-image.width / 2, -image.height / 2);\n\n  // draw rotated image\n  ctx.drawImage(image, 0, 0);\n\n  // croppedAreaPixels values are bounding box relative\n  // extract the cropped image using these values\n  const data = ctx.getImageData(\n    pixelCrop.x,\n    pixelCrop.y,\n    pixelCrop.width,\n    pixelCrop.height\n  );\n\n  // set canvas width to final desired crop size - this will clear existing context\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n\n  // paste generated rotate image at the top left corner\n  ctx.putImageData(data, 0, 0);\n\n  // As Base64 string\n  // return canvas.toDataURL('image/jpeg');\n\n  // As a blob\n  return new Promise((resolve, reject) => {\n    canvas.toBlob((file) => {\n      file.name = 'cropped.jpeg';\n      resolve({ file: file, url: URL.createObjectURL(file) });\n    }, 'image/jpeg');\n  });\n}","import { Cancel } from '@mui/icons-material';\nimport CropIcon from '@mui/icons-material/Crop';\nimport {\n  Box,\n  Button,\n  DialogActions,\n  DialogContent,\n  Slider,\n  Typography,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport Cropper from 'react-easy-crop';\nimport getCroppedImg from './utils/cropImage';\n\nconst CropEasy = ({ photoURL, setOpenCrop, setPhotoURL, setFile, imgFiles, setImgFiles, size }) => {\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\n  const [zoom, setZoom] = useState(1);\n  const [rotation, setRotation] = useState(0);\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\n\n  const cropComplete = (croppedArea, croppedAreaPixels) => {\n    setCroppedAreaPixels(croppedAreaPixels);\n  };\n\n  const cropImage = async () => {\n    try {\n      const { file, url } = await getCroppedImg(\n        photoURL,\n        croppedAreaPixels,\n        rotation\n      );\n      setPhotoURL(url);\n      setFile(file);\n      setImgFiles([...imgFiles,file ])\n\n      setOpenCrop(false);\n    } catch (error) {\n     \n      console.log(error);\n    }\n\n          };\n  return (\n    <>\n      <DialogContent\n        dividers\n        sx={{\n          background: '#333',\n          position: 'relative',\n          height: 400,\n          width: 'auto',\n          minWidth: { sm: 500 },\n        }}\n      >\n        <Cropper\n          image={photoURL}\n          crop={crop}\n          zoom={zoom}\n          rotation={rotation}\n          aspect={size}\n          onZoomChange={setZoom}\n          onRotationChange={setRotation}\n          onCropChange={setCrop}\n          onCropComplete={cropComplete}\n        />\n      </DialogContent>\n      <DialogActions sx={{ flexDirection: 'column', mx: 3, my: 2 }}>\n        <Box sx={{ width: '100%', mb: 1 }}>\n          <Box>\n            <Typography>Zoom: {zoomPercent(zoom)}</Typography>\n            <Slider\n              valueLabelDisplay=\"auto\"\n              valueLabelFormat={zoomPercent}\n              min={1}\n              max={3}\n              step={0.1}\n              value={zoom}\n              onChange={(e, zoom) => setZoom(zoom)}\n            />\n          </Box>\n          <Box>\n            <Typography>Rotation: {rotation + '°'}</Typography>\n            <Slider\n              valueLabelDisplay=\"auto\"\n              min={0}\n              max={360}\n              value={rotation}\n              onChange={(e, rotation) => setRotation(rotation)}\n            />\n          </Box>\n        </Box>\n        <Box\n          sx={{\n            display: 'flex',\n            gap: 2,\n            flexWrap: 'wrap',\n          }}\n        >\n          <Button\n            variant=\"outlined\"\n            startIcon={<Cancel />}\n            onClick={() => setOpenCrop(false)}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"contained\"\n            startIcon={<CropIcon />}\n            onClick={cropImage}\n          >\n            Crop\n          </Button>\n        </Box>\n      </DialogActions>\n    </>\n  );\n};\n\nexport default CropEasy;\n\nconst zoomPercent = (value) => {\n  return `${Math.round(value * 100)}%`;\n};","import React from 'react';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Slider from \"react-slick\";\nimport Footer from \"../components/Footer/Footer\"\nimport Navbar from '../components/navbar/navbar'\nimport WhatsAppIcon from '@mui/icons-material/WhatsApp';\nimport { useLocation } from 'react-router-dom';\nimport useFetch from '../../hooks/useFetch';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport {useNavigate} from 'react-router-dom'\n\nimport axios from \"axios\"\nimport DriveFolderUploadIcon from '@mui/icons-material/DriveFolderUpload';\n\nimport avatar from '../Assets/avatar.png'\nimport { Link } from 'react-router-dom';\nimport './userprofile.css'\nimport CropEasy from '../../Pages/components/crop/CropEasy'\nconst Updateuser = ({setOpen}) => {\n    \n    // const userObj = JSON.parse(window.localStorage.getItem('user'))\n    const userObj = JSON.parse(window.sessionStorage.getItem('user'))\n    const axiosInstance = axios.create({\n        baseURL: process.env.REACT_APP_API_URL,\n    })\n    const navigate = useNavigate();\n\n    const {data, loading, error} = useFetch(`/user/find/${userObj._id}`)\n    console.log(data)\n    const [info, setinfo] = useState({});\n\n    const size = 1;\n\n    const handleChange = (e) => {\n        setinfo((prev) => ({...prev, [e.target.id] : e.target.value}))\n        console.log(info)\n    }\n    const [file, setFile] = useState(\"\")\n\n    const [photoURL, setPhotoURL] = useState(\"\");\n    const [openCrop, setOpenCrop] = useState(false);\n    const [imgFiles, setImgFiles] = useState([])\n    const handleImageChange = (e) => {\n        const file = e.target.files[0];\n        if(file){\n            setFile(file);\n            setPhotoURL(URL.createObjectURL(file)); \n            setOpenCrop(true);\n            console.log(imgFiles)\n        }\n       }\n    \n       const handleReviewClick = async e => {\n\n        e.preventDefault();\n        setOpen(true)\n\n        try{\n            let url = data.img\n            if(file != \"\"){\n                const data = new FormData();\n                data.append(\"file\", file);\n                data.append(\"upload_preset\", \"upload\");\n                const uploadRes = await axiosInstance.post(\n                    \"https://api.cloudinary.com/v1_1/difxlqrlc/image/upload\",\n                data\n              );\n\n              url  = uploadRes.data.url;\n            }\n            // localStorage.setItem('user.img', url)\n            sessionStorage.setItem('user.img', url)\n                \n            const newUser = {\n                ...info,img:url,\n            };\n            console.log(newUser, \"HAI\")\n            await axiosInstance.patch(`/user/${userObj._id}`, newUser);\n            console.log(\"new review has been created\")\n\n             navigate('/user')\n        }catch(err){\n            console.log(err)\n        }\n        setOpen(false)\n\n        \n    }\n\n\n\n\n    return (\n\n\n        \n        <div>\n            <Navbar  />\n            {/* Header */}\n            {openCrop &&\n            <div className='crop-box-con'><CropEasy {...{ photoURL, setOpenCrop, setPhotoURL, setFile ,imgFiles,setImgFiles, size}} /></div>}\n            \n            <div className=\"mt-20 md:mt-32 flex items-center justify-center px-8 py-8\">\n                <div className=\"flex flex-col justify-center items-start  gap-[30px] user-con\">\n                    <div className=\"w-[50%] flex justify-start \">\n                    <img className='w-[60%] md:w-[70%] max-w-[500px] rounded-full' src={\n                                        file\n                                        ? URL.createObjectURL(file)\n                                        : data.img\n                                    } alt=\"\" />                            \n                    </div>\n                    <label htmlFor=\"profilephoto\">Upload image  <DriveFolderUploadIcon className='upload-icn'/></label>\n                    <input type=\"file\" id='profilephoto' className='hidden' onChange={handleImageChange}/>\n                    <div className=\"w-[100%] md:w-[50%] flex flex-col gap-[10px] items-start\">\n                       <form action=\"\" className='flex flex-col gap-[10px] items-start text-[grey]'>\n                            <input className='border-none rounded outline-none' type=\"text\" defaultValue={data.username} id=\"username\" onChange={handleChange} />\n                           {data.google_id?<div></div>: <input type=\"text\" className='border-none rounded outline-none' defaultValue={data.email} id=\"email\" onChange={handleChange}/>}\n                            <input type=\"text\" className='border-none rounded outline-none' defaultValue={data.phone} id=\"phone\" onChange={handleChange}/>\n                            <button  className=\"flex justify-center items-center bg-evergreen text-blacky-medium w-36 font-bold rounded-md p-2 my-5 hover:bg-whiteglow duration-500\" onClick={handleReviewClick}>Update</button>\n                       </form>\n                    </div>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n};\n\n\n\n\nexport default Updateuser;"],"names":["createImage","url","Promise","resolve","reject","image","Image","addEventListener","error","setAttribute","src","getRadianAngle","degreeValue","Math","PI","rotateSize","width","height","rotation","rotRad","abs","cos","sin","getCroppedImg","_x","_x2","_getCroppedImg","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","imageSrc","pixelCrop","flip","canvas","ctx","_rotateSize","bBoxWidth","bBoxHeight","data","_args","wrap","_context","prev","next","length","undefined","horizontal","vertical","sent","document","createElement","getContext","abrupt","translate","rotate","scale","drawImage","getImageData","x","y","putImageData","toBlob","file","name","URL","createObjectURL","stop","_ref","photoURL","setOpenCrop","setPhotoURL","setFile","imgFiles","setImgFiles","size","_useState","useState","_useState2","_slicedToArray","crop","setCrop","_useState3","_useState4","zoom","setZoom","_useState5","_useState6","setRotation","_useState7","_useState8","croppedAreaPixels","setCroppedAreaPixels","cropImage","_ref2","_yield$getCroppedImg","concat","_toConsumableArray","t0","console","log","_jsxs","_Fragment","children","_jsx","DialogContent","dividers","sx","background","position","minWidth","sm","Cropper","aspect","onZoomChange","onRotationChange","onCropChange","onCropComplete","croppedArea","DialogActions","flexDirection","mx","my","Box","mb","Typography","zoomPercent","Slider","valueLabelDisplay","valueLabelFormat","min","max","step","value","onChange","e","display","gap","flexWrap","Button","variant","startIcon","Cancel","onClick","CropIcon","round","setOpen","userObj","JSON","parse","window","sessionStorage","getItem","axiosInstance","axios","create","baseURL","process","navigate","useNavigate","_useFetch","useFetch","_id","loading","info","setinfo","handleChange","_objectSpread","_defineProperty","target","id","openCrop","_useState9","_useState10","handleReviewClick","_data","uploadRes","newUser","preventDefault","img","FormData","append","post","setItem","patch","Navbar","className","CropEasy","alt","htmlFor","DriveFolderUploadIcon","type","files","action","defaultValue","username","google_id","email","phone","Footer"],"sourceRoot":""}